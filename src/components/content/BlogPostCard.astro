---
import { Icon } from "astro-icon/components";
import BlogTag from "../badges/Tag.astro";

const {
  tagLabel,
  tagIcon,
  tagType,
  imgSrc = "https://picsum.photos/300/320",
  title = "Title",
  description = "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Soluta excepturi aspernatur, quod atque animi neque.",
  wordCount = 0,
  readTime = 0,
  pubDate = 'Jan 01 2000',
  ref = "/blog",
} = Astro.props;
---

<div
  class="flex shadow-md shadow-neutral-300 rounded-2xl outline-[1px] outline-neutral-100 overflow-hidden"
>
  <div class="flex flex-col gap-4 px-8 py-6">
    <div class="justify-between grid grid-cols-2">
      <p
        class="flex items-center gap-3 text-neutral-500 text-sm whitespace-nowrap"
      >
        <span class="flex items-center gap-1"
          ><Icon name="mdi:calendar-outline" />{new Date(pubDate).toDateString()}</span
        >
        <!-- <span class="flex items-center gap-0.5"
          ><Icon name="mdi:bookmark-outline" />type</span
        > -->
      </p>
      <p
        class="flex justify-end items-center gap-0.5 text-neutral-500 text-sm whitespace-nowrap"
      >
        <span class="flex items-center gap-1"
          ><Icon name="mdi:book-open-page-variant" />{wordCount} words</span
        >
        <Icon name="mdi:dot" />
        <span class="flex items-center gap-0.5"
          ><Icon name="mdi:timer-sand" />{readTime} minutes</span
        >
      </p>
    </div>
    <a href={ref}>
      <h3
        class="pl-2 border-l-6 border-l-blue-700 w-fit font-extrabold hover:text-blue-700 text-xl transition-colors duration-150"
        data-title
      >
        <span class="flex items-center gap-2"
          >{title}
          <Icon
            name="mdi:chevron-double-right"
            class="hidden translate-x-[-20px]"
          /></span
        >
        <hr class="border-t-2 border-b-2 w-0" />
      </h3>
    </a>
    <p class="mt-[-10px]">
      {description}
    </p>
    <div class="flex flex-row gap-2">
      <BlogTag icon="mdi:folder-open" label="Documentation" color="blue" />
      <BlogTag
        icon="mdi:tag-outline"
        label="Life of an Artist"
        color="purple"
      />
    </div>
  </div>
  <a class="relative w-full h-full hover:cursor-pointer" href={ref}>
    <div
      class="top-0 right-0 left-0 z-10 absolute bg-zinc-900 opacity-50 w-0 h-full"
      data-img
    >
      <Icon
        name="mdi:chevron-right-circle-outline"
        class="top-0 right-0 left-0 z-11 absolute w-0 h-full text-white/50 scale-50"
        data-chevron
      />
    </div>
    <img src={imgSrc} alt="" class="w-full h-[262px] max-h-[262px] object-cover" />
  </a>
</div>

<script>
  import { gsap } from "gsap";

  document.addEventListener("astro:page-load", () => {
    const imgs = document.querySelectorAll("[data-img]");
    const chevrons = document.querySelectorAll("[data-chevron]");
    imgs.forEach((img, index) => {
      img.nextElementSibling?.addEventListener("mouseenter", () => {
        gsap.to(img, {
          width: "100%",
          duration: 0.575,
          pointerEvents: "none",
          zIndex: 1,
          ease: "power4.out",
        });
        gsap.to(chevrons[index], {
          width: "100%",
          duration: 0.575,
          pointerEvents: "none",
          zIndex: 3,
          ease: "power4.out",
        });
      });
      img.nextElementSibling?.addEventListener("mouseleave", () => {
        gsap.to(img, {
          width: 0,
          duration: 0.575,
          zIndex: 0,
          pointerEvents: "auto",
          ease: "power4.out",
        });
        gsap.to(chevrons[index], {
          width: 0,
          duration: 0.575,
          zIndex: 2,
          pointerEvents: "auto",
          ease: "power4.out",
        });
      });
    });
    const titles = document.querySelectorAll("[data-title");
    titles.forEach((title) => {
      title.addEventListener("mouseenter", () => {
        gsap.to(title.querySelector("hr"), {
          width: "100%",
          duration: 0.575,
          ease: "power4.out",
        });
        gsap.to(title.querySelector("svg"), {
          translateX: -3,
          display: "block",
          opacity: 1,
          duration: 0.475,
          ease: "power4.out",
        });
      });
      title.addEventListener("mouseleave", () => {
        gsap.to(title.querySelector("hr"), {
          width: 0,
          duration: 0.575,
          ease: "power4.out",
        });
        gsap.to(title.querySelector("svg"), {
          translateX: -6,
          display: "none",
          opacity: 0,
          duration: 0.575,
          ease: "power4.out",
        });
      });
    });
  });
</script>
